---

- name: "configuration play."
  hosts: web
  remote_user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
   ansible_python_interpreter: /usr/bin/python3
   ansible_host_key_checking: false
   ansible_stdout_callback: yaml


  pre_tasks:
     - name: "wait 600 seconds for target connection to become reachable/usable."
       wait_for_connection:

       
     - name: "install python for Ansible."
       become: true
       raw: test -e /user/bin/python3 || (apt -y update && apt install -y python3)
       changed_when: false
   
     - name: "Executing Node app with PM2"
       shell: |
        cd ~/backend-app/dist
        pm2 stop default
        pm2 start main.js

     register: execute_node

     - name: print message
        debug:
          msg: "{{ execute_node.stdout_lines }}"
    
     - name: "Configure pm2 to start as service"
        shell: |
          sudo su -c "env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu"
          pm2 save
          
  environment:
    NODE_ENV: production
    VERSION: "1"
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR') }}"
    TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES') }}"
    TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS') }}"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
    CORS_WHITELIST: "*"
    
  roles:
    - deploy
